// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0-devel
// 	protoc        v3.17.3
// source: api/auth.proto

package api

import (
	constant "github.com/j-tokumori/gshell/cmd/test/constant"
	status "github.com/j-tokumori/gshell/cmd/test/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ユーザ登録引数
type RegisterArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 国コード ex."jp","us"... 特定出来ない場合は"**"
	Country string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	// プラットフォームID "apple" or "google"
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	// プラットフォーム固有のユーザー識別子<br> iOS6以降: IdentifierForVendor<br> Android: AndroidID<br> 設定不可能な場合は “0” を設定
	PlatformUserId string `protobuf:"bytes,3,opt,name=platform_user_id,json=platformUserId,proto3" json:"platform_user_id,omitempty"`
	// 使用中のハードウェアのモデル名称
	DeviceName string `protobuf:"bytes,4,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	// 流入元の識別子 @deprecated
	PromotionCode string `protobuf:"bytes,5,opt,name=promotion_code,json=promotionCode,proto3" json:"promotion_code,omitempty"`
	// 広告ID
	AdId string `protobuf:"bytes,6,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
}

func (x *RegisterArgs) Reset() {
	*x = RegisterArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterArgs) ProtoMessage() {}

func (x *RegisterArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterArgs.ProtoReflect.Descriptor instead.
func (*RegisterArgs) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterArgs) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *RegisterArgs) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *RegisterArgs) GetPlatformUserId() string {
	if x != nil {
		return x.PlatformUserId
	}
	return ""
}

func (x *RegisterArgs) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *RegisterArgs) GetPromotionCode() string {
	if x != nil {
		return x.PromotionCode
	}
	return ""
}

func (x *RegisterArgs) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

// ユーザ登録返り値
type RegisterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ユーザーパスワード
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *RegisterReply) Reset() {
	*x = RegisterReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReply) ProtoMessage() {}

func (x *RegisterReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReply.ProtoReflect.Descriptor instead.
func (*RegisterReply) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RegisterReply) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

// ユーザログイン引数
type LoginArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// パスワード
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	// デバイス名
	DeviceName string `protobuf:"bytes,3,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	// OS名 "ios" or "android"
	OsName string `protobuf:"bytes,4,opt,name=os_name,json=osName,proto3" json:"os_name,omitempty"`
	// OSバージョン ex. "8.0.1"
	OsVersion string `protobuf:"bytes,5,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	// 広告ID
	AdId string `protobuf:"bytes,6,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	// ストレージ空き容量
	Space int64 `protobuf:"varint,7,opt,name=space,proto3" json:"space,omitempty"`
}

func (x *LoginArgs) Reset() {
	*x = LoginArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginArgs) ProtoMessage() {}

func (x *LoginArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginArgs.ProtoReflect.Descriptor instead.
func (*LoginArgs) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{2}
}

func (x *LoginArgs) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LoginArgs) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *LoginArgs) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *LoginArgs) GetOsName() string {
	if x != nil {
		return x.OsName
	}
	return ""
}

func (x *LoginArgs) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *LoginArgs) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *LoginArgs) GetSpace() int64 {
	if x != nil {
		return x.Space
	}
	return 0
}

// ユーザログイン返り値
type LoginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 認証トークン
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// ユーザー情報
	User *status.SelfStatus `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *LoginReply) Reset() {
	*x = LoginReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReply) ProtoMessage() {}

func (x *LoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReply.ProtoReflect.Descriptor instead.
func (*LoginReply) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{3}
}

func (x *LoginReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginReply) GetUser() *status.SelfStatus {
	if x != nil {
		return x.User
	}
	return nil
}

// データ引き継ぎURL取得引数
type GetTransferURLArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// プロバイダー種別
	ProviderType constant.TransferProviderType `protobuf:"varint,1,opt,name=provider_type,json=providerType,proto3,enum=constant.TransferProviderType" json:"provider_type,omitempty"`
}

func (x *GetTransferURLArgs) Reset() {
	*x = GetTransferURLArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransferURLArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransferURLArgs) ProtoMessage() {}

func (x *GetTransferURLArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransferURLArgs.ProtoReflect.Descriptor instead.
func (*GetTransferURLArgs) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{4}
}

func (x *GetTransferURLArgs) GetProviderType() constant.TransferProviderType {
	if x != nil {
		return x.ProviderType
	}
	return constant.TransferProviderType(0)
}

// データ引き継ぎURL取得返り値
type GetTransferURLReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 引き継ぎ先遷移URL
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetTransferURLReply) Reset() {
	*x = GetTransferURLReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransferURLReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransferURLReply) ProtoMessage() {}

func (x *GetTransferURLReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransferURLReply.ProtoReflect.Descriptor instead.
func (*GetTransferURLReply) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{5}
}

func (x *GetTransferURLReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// データ引き継ぎ実行引数
type ExecuteTransferArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// プロバイダ種別
	ProviderType constant.TransferProviderType `protobuf:"varint,1,opt,name=provider_type,json=providerType,proto3,enum=constant.TransferProviderType" json:"provider_type,omitempty"`
	// callbackで返したトークン
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	// プラットフォームID "apple" or "google"
	Platform string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	// プラットフォーム固有のユーザー識別子<br> iOS6以降: IdentifierForVendor<br> Android: AndroidID<br> 設定不可能な場合は “0” を設定
	PlatformUserId string `protobuf:"bytes,4,opt,name=platform_user_id,json=platformUserId,proto3" json:"platform_user_id,omitempty"`
	// 認証タイプ
	AuthenticationType constant.TransferAuthenticationType `protobuf:"varint,5,opt,name=authentication_type,json=authenticationType,proto3,enum=constant.TransferAuthenticationType" json:"authentication_type,omitempty"`
}

func (x *ExecuteTransferArgs) Reset() {
	*x = ExecuteTransferArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTransferArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransferArgs) ProtoMessage() {}

func (x *ExecuteTransferArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTransferArgs.ProtoReflect.Descriptor instead.
func (*ExecuteTransferArgs) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{6}
}

func (x *ExecuteTransferArgs) GetProviderType() constant.TransferProviderType {
	if x != nil {
		return x.ProviderType
	}
	return constant.TransferProviderType(0)
}

func (x *ExecuteTransferArgs) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ExecuteTransferArgs) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ExecuteTransferArgs) GetPlatformUserId() string {
	if x != nil {
		return x.PlatformUserId
	}
	return ""
}

func (x *ExecuteTransferArgs) GetAuthenticationType() constant.TransferAuthenticationType {
	if x != nil {
		return x.AuthenticationType
	}
	return constant.TransferAuthenticationType(0)
}

// データ引き継ぎ実行返り値
type ExecuteTransferReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 引き継ぎ成功
	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	// ユーザーID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// ユーザーパスワード
	Secret string `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *ExecuteTransferReply) Reset() {
	*x = ExecuteTransferReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteTransferReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteTransferReply) ProtoMessage() {}

func (x *ExecuteTransferReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteTransferReply.ProtoReflect.Descriptor instead.
func (*ExecuteTransferReply) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{7}
}

func (x *ExecuteTransferReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *ExecuteTransferReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ExecuteTransferReply) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

// 非ログインデータ引き継ぎ連携URL取得引数
type GetConnectURLAndTokenArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// パスワード
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	// プロバイダー種別
	ProviderType constant.TransferProviderType `protobuf:"varint,3,opt,name=provider_type,json=providerType,proto3,enum=constant.TransferProviderType" json:"provider_type,omitempty"`
}

func (x *GetConnectURLAndTokenArgs) Reset() {
	*x = GetConnectURLAndTokenArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectURLAndTokenArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectURLAndTokenArgs) ProtoMessage() {}

func (x *GetConnectURLAndTokenArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectURLAndTokenArgs.ProtoReflect.Descriptor instead.
func (*GetConnectURLAndTokenArgs) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{8}
}

func (x *GetConnectURLAndTokenArgs) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetConnectURLAndTokenArgs) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *GetConnectURLAndTokenArgs) GetProviderType() constant.TransferProviderType {
	if x != nil {
		return x.ProviderType
	}
	return constant.TransferProviderType(0)
}

// 非ログインデータ引き継ぎ連携URL取得返り値
type GetConnectURLAndTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 連携済みフラグ
	Connected bool `protobuf:"varint,1,opt,name=connected,proto3" json:"connected,omitempty"`
	// 連携先遷移URL
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// ユーザー情報
	User *status.SelfStatus `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	// 連携解除可能な日時
	ReleasableDate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=releasable_date,json=releasableDate,proto3" json:"releasable_date,omitempty"`
}

func (x *GetConnectURLAndTokenReply) Reset() {
	*x = GetConnectURLAndTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectURLAndTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectURLAndTokenReply) ProtoMessage() {}

func (x *GetConnectURLAndTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectURLAndTokenReply.ProtoReflect.Descriptor instead.
func (*GetConnectURLAndTokenReply) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{9}
}

func (x *GetConnectURLAndTokenReply) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *GetConnectURLAndTokenReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetConnectURLAndTokenReply) GetUser() *status.SelfStatus {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetConnectURLAndTokenReply) GetReleasableDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleasableDate
	}
	return nil
}

// 非ログインデータ引き継ぎ連携実行引数
type ExecuteConnectProviderAndTokenArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// パスワード
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	// プロバイダ種別
	ProviderType constant.TransferProviderType `protobuf:"varint,3,opt,name=provider_type,json=providerType,proto3,enum=constant.TransferProviderType" json:"provider_type,omitempty"`
	// callbackで返したトークン
	Token string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	// 認証タイプ
	AuthenticationType constant.TransferAuthenticationType `protobuf:"varint,5,opt,name=authentication_type,json=authenticationType,proto3,enum=constant.TransferAuthenticationType" json:"authentication_type,omitempty"`
}

func (x *ExecuteConnectProviderAndTokenArgs) Reset() {
	*x = ExecuteConnectProviderAndTokenArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteConnectProviderAndTokenArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteConnectProviderAndTokenArgs) ProtoMessage() {}

func (x *ExecuteConnectProviderAndTokenArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteConnectProviderAndTokenArgs.ProtoReflect.Descriptor instead.
func (*ExecuteConnectProviderAndTokenArgs) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{10}
}

func (x *ExecuteConnectProviderAndTokenArgs) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ExecuteConnectProviderAndTokenArgs) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ExecuteConnectProviderAndTokenArgs) GetProviderType() constant.TransferProviderType {
	if x != nil {
		return x.ProviderType
	}
	return constant.TransferProviderType(0)
}

func (x *ExecuteConnectProviderAndTokenArgs) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ExecuteConnectProviderAndTokenArgs) GetAuthenticationType() constant.TransferAuthenticationType {
	if x != nil {
		return x.AuthenticationType
	}
	return constant.TransferAuthenticationType(0)
}

// 非ログインデータ引き継ぎ連携実行返り値
type ExecuteConnectProviderAndTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 連携成功
	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ExecuteConnectProviderAndTokenReply) Reset() {
	*x = ExecuteConnectProviderAndTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteConnectProviderAndTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteConnectProviderAndTokenReply) ProtoMessage() {}

func (x *ExecuteConnectProviderAndTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteConnectProviderAndTokenReply.ProtoReflect.Descriptor instead.
func (*ExecuteConnectProviderAndTokenReply) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{11}
}

func (x *ExecuteConnectProviderAndTokenReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 非ログイン他ゲームユーザーのデータ引き継ぎ連携解除引数
type ConnectReleaseOtherAndTokenArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// パスワード
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	// プロバイダ種別
	ProviderType constant.TransferProviderType `protobuf:"varint,3,opt,name=provider_type,json=providerType,proto3,enum=constant.TransferProviderType" json:"provider_type,omitempty"`
	// callbackで返したトークン
	Token string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	// 認証タイプ
	AuthenticationType constant.TransferAuthenticationType `protobuf:"varint,5,opt,name=authentication_type,json=authenticationType,proto3,enum=constant.TransferAuthenticationType" json:"authentication_type,omitempty"`
}

func (x *ConnectReleaseOtherAndTokenArgs) Reset() {
	*x = ConnectReleaseOtherAndTokenArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectReleaseOtherAndTokenArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReleaseOtherAndTokenArgs) ProtoMessage() {}

func (x *ConnectReleaseOtherAndTokenArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReleaseOtherAndTokenArgs.ProtoReflect.Descriptor instead.
func (*ConnectReleaseOtherAndTokenArgs) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{12}
}

func (x *ConnectReleaseOtherAndTokenArgs) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConnectReleaseOtherAndTokenArgs) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ConnectReleaseOtherAndTokenArgs) GetProviderType() constant.TransferProviderType {
	if x != nil {
		return x.ProviderType
	}
	return constant.TransferProviderType(0)
}

func (x *ConnectReleaseOtherAndTokenArgs) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ConnectReleaseOtherAndTokenArgs) GetAuthenticationType() constant.TransferAuthenticationType {
	if x != nil {
		return x.AuthenticationType
	}
	return constant.TransferAuthenticationType(0)
}

// 非ログイン他ゲームユーザーのデータ引き継ぎ連携解除返り値
type ConnectReleaseOtherAndTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 連携解除成功
	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ConnectReleaseOtherAndTokenReply) Reset() {
	*x = ConnectReleaseOtherAndTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectReleaseOtherAndTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReleaseOtherAndTokenReply) ProtoMessage() {}

func (x *ConnectReleaseOtherAndTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReleaseOtherAndTokenReply.ProtoReflect.Descriptor instead.
func (*ConnectReleaseOtherAndTokenReply) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{13}
}

func (x *ConnectReleaseOtherAndTokenReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 非ログインデータ引き継ぎ連携解除引数
type ConnectReleaseAndTokenArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// パスワード
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	// プロバイダ種別
	ProviderType constant.TransferProviderType `protobuf:"varint,3,opt,name=provider_type,json=providerType,proto3,enum=constant.TransferProviderType" json:"provider_type,omitempty"`
}

func (x *ConnectReleaseAndTokenArgs) Reset() {
	*x = ConnectReleaseAndTokenArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectReleaseAndTokenArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReleaseAndTokenArgs) ProtoMessage() {}

func (x *ConnectReleaseAndTokenArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReleaseAndTokenArgs.ProtoReflect.Descriptor instead.
func (*ConnectReleaseAndTokenArgs) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{14}
}

func (x *ConnectReleaseAndTokenArgs) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConnectReleaseAndTokenArgs) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ConnectReleaseAndTokenArgs) GetProviderType() constant.TransferProviderType {
	if x != nil {
		return x.ProviderType
	}
	return constant.TransferProviderType(0)
}

// 非ログインデータ引き継ぎ連携解除返り値
type ConnectReleaseAndTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 連携解除成功
	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ConnectReleaseAndTokenReply) Reset() {
	*x = ConnectReleaseAndTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectReleaseAndTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReleaseAndTokenReply) ProtoMessage() {}

func (x *ConnectReleaseAndTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReleaseAndTokenReply.ProtoReflect.Descriptor instead.
func (*ConnectReleaseAndTokenReply) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{15}
}

func (x *ConnectReleaseAndTokenReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// GetTransferEnable引数
type GetTransferEnableArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTransferEnableArgs) Reset() {
	*x = GetTransferEnableArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransferEnableArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransferEnableArgs) ProtoMessage() {}

func (x *GetTransferEnableArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransferEnableArgs.ProtoReflect.Descriptor instead.
func (*GetTransferEnableArgs) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{16}
}

// GetTransferEnable返り値
type GetTransferEnableReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 引き継ぎが有効な場合はtrueを返却
	IsTransferEnable bool `protobuf:"varint,1,opt,name=is_transfer_enable,json=isTransferEnable,proto3" json:"is_transfer_enable,omitempty"`
}

func (x *GetTransferEnableReply) Reset() {
	*x = GetTransferEnableReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransferEnableReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransferEnableReply) ProtoMessage() {}

func (x *GetTransferEnableReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransferEnableReply.ProtoReflect.Descriptor instead.
func (*GetTransferEnableReply) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{17}
}

func (x *GetTransferEnableReply) GetIsTransferEnable() bool {
	if x != nil {
		return x.IsTransferEnable
	}
	return false
}

// GetServerEnable引数
type GetServerEnableArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetServerEnableArgs) Reset() {
	*x = GetServerEnableArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerEnableArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerEnableArgs) ProtoMessage() {}

func (x *GetServerEnableArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerEnableArgs.ProtoReflect.Descriptor instead.
func (*GetServerEnableArgs) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{18}
}

// GetServerEnable返り値
type GetServerEnableReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// サーバーが有効な場合はtrueを返却
	IsServerEnable bool `protobuf:"varint,1,opt,name=is_server_enable,json=isServerEnable,proto3" json:"is_server_enable,omitempty"`
}

func (x *GetServerEnableReply) Reset() {
	*x = GetServerEnableReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerEnableReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerEnableReply) ProtoMessage() {}

func (x *GetServerEnableReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerEnableReply.ProtoReflect.Descriptor instead.
func (*GetServerEnableReply) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{19}
}

func (x *GetServerEnableReply) GetIsServerEnable() bool {
	if x != nil {
		return x.IsServerEnable
	}
	return false
}

// VerifyConnectTokenAndUser引数
type VerifyConnectTokenAndUserArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ユーザーID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// パスワード
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	// 連携タイプ
	ProviderType constant.TransferProviderType `protobuf:"varint,3,opt,name=provider_type,json=providerType,proto3,enum=constant.TransferProviderType" json:"provider_type,omitempty"`
	// トークン
	Token string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	// 認可コード
	AuthorizationCode string `protobuf:"bytes,5,opt,name=authorization_code,json=authorizationCode,proto3" json:"authorization_code,omitempty"`
}

func (x *VerifyConnectTokenAndUserArgs) Reset() {
	*x = VerifyConnectTokenAndUserArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyConnectTokenAndUserArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyConnectTokenAndUserArgs) ProtoMessage() {}

func (x *VerifyConnectTokenAndUserArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyConnectTokenAndUserArgs.ProtoReflect.Descriptor instead.
func (*VerifyConnectTokenAndUserArgs) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{20}
}

func (x *VerifyConnectTokenAndUserArgs) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VerifyConnectTokenAndUserArgs) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *VerifyConnectTokenAndUserArgs) GetProviderType() constant.TransferProviderType {
	if x != nil {
		return x.ProviderType
	}
	return constant.TransferProviderType(0)
}

func (x *VerifyConnectTokenAndUserArgs) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VerifyConnectTokenAndUserArgs) GetAuthorizationCode() string {
	if x != nil {
		return x.AuthorizationCode
	}
	return ""
}

// VerifyConnectTokenAndUser返り値
type VerifyConnectTokenAndUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 検証結果
	Result constant.ConnectionResultType `protobuf:"varint,1,opt,name=result,proto3,enum=constant.ConnectionResultType" json:"result,omitempty"`
	// 検索ユーザーID
	SearchId string `protobuf:"bytes,2,opt,name=search_id,json=searchId,proto3" json:"search_id,omitempty"`
	// ユーザーの名前
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// 連携タイプ
	Type constant.TransferProviderType `protobuf:"varint,4,opt,name=type,proto3,enum=constant.TransferProviderType" json:"type,omitempty"`
	// トークン
	Token string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	// レベル
	//
	// Deprecated: Do not use.
	Level int32 `protobuf:"varint,6,opt,name=level,proto3" json:"level,omitempty"`
	// 連携解除可能な日時
	ReleasableDate *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=releasable_date,json=releasableDate,proto3" json:"releasable_date,omitempty"`
}

func (x *VerifyConnectTokenAndUserReply) Reset() {
	*x = VerifyConnectTokenAndUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyConnectTokenAndUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyConnectTokenAndUserReply) ProtoMessage() {}

func (x *VerifyConnectTokenAndUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyConnectTokenAndUserReply.ProtoReflect.Descriptor instead.
func (*VerifyConnectTokenAndUserReply) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{21}
}

func (x *VerifyConnectTokenAndUserReply) GetResult() constant.ConnectionResultType {
	if x != nil {
		return x.Result
	}
	return constant.ConnectionResultType(0)
}

func (x *VerifyConnectTokenAndUserReply) GetSearchId() string {
	if x != nil {
		return x.SearchId
	}
	return ""
}

func (x *VerifyConnectTokenAndUserReply) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *VerifyConnectTokenAndUserReply) GetType() constant.TransferProviderType {
	if x != nil {
		return x.Type
	}
	return constant.TransferProviderType(0)
}

func (x *VerifyConnectTokenAndUserReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Deprecated: Do not use.
func (x *VerifyConnectTokenAndUserReply) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *VerifyConnectTokenAndUserReply) GetReleasableDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReleasableDate
	}
	return nil
}

// VerifyTransferToken引数
type VerifyTransferTokenArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 連携タイプ
	ProviderType constant.TransferProviderType `protobuf:"varint,1,opt,name=provider_type,json=providerType,proto3,enum=constant.TransferProviderType" json:"provider_type,omitempty"`
	// トークン
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	// 認可コード
	AuthorizationCode string `protobuf:"bytes,3,opt,name=authorization_code,json=authorizationCode,proto3" json:"authorization_code,omitempty"`
}

func (x *VerifyTransferTokenArgs) Reset() {
	*x = VerifyTransferTokenArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTransferTokenArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTransferTokenArgs) ProtoMessage() {}

func (x *VerifyTransferTokenArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTransferTokenArgs.ProtoReflect.Descriptor instead.
func (*VerifyTransferTokenArgs) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{22}
}

func (x *VerifyTransferTokenArgs) GetProviderType() constant.TransferProviderType {
	if x != nil {
		return x.ProviderType
	}
	return constant.TransferProviderType(0)
}

func (x *VerifyTransferTokenArgs) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VerifyTransferTokenArgs) GetAuthorizationCode() string {
	if x != nil {
		return x.AuthorizationCode
	}
	return ""
}

// VerifyTransferToken返り値
type VerifyTransferTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 検証結果
	Result constant.ConnectionResultType `protobuf:"varint,1,opt,name=result,proto3,enum=constant.ConnectionResultType" json:"result,omitempty"`
	// 検索ユーザーID
	SearchId string `protobuf:"bytes,2,opt,name=search_id,json=searchId,proto3" json:"search_id,omitempty"`
	// ユーザーの名前
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// 連携タイプ
	Type constant.TransferProviderType `protobuf:"varint,4,opt,name=type,proto3,enum=constant.TransferProviderType" json:"type,omitempty"`
	// トークン
	Token string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	// レベル
	//
	// Deprecated: Do not use.
	Level int32 `protobuf:"varint,6,opt,name=level,proto3" json:"level,omitempty"`
	// マンスリーチケット有効期限内かどうか
	InTermMonthlyTicket bool `protobuf:"varint,7,opt,name=in_term_monthly_ticket,json=inTermMonthlyTicket,proto3" json:"in_term_monthly_ticket,omitempty"`
}

func (x *VerifyTransferTokenReply) Reset() {
	*x = VerifyTransferTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_auth_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyTransferTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyTransferTokenReply) ProtoMessage() {}

func (x *VerifyTransferTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_auth_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyTransferTokenReply.ProtoReflect.Descriptor instead.
func (*VerifyTransferTokenReply) Descriptor() ([]byte, []int) {
	return file_api_auth_proto_rawDescGZIP(), []int{23}
}

func (x *VerifyTransferTokenReply) GetResult() constant.ConnectionResultType {
	if x != nil {
		return x.Result
	}
	return constant.ConnectionResultType(0)
}

func (x *VerifyTransferTokenReply) GetSearchId() string {
	if x != nil {
		return x.SearchId
	}
	return ""
}

func (x *VerifyTransferTokenReply) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *VerifyTransferTokenReply) GetType() constant.TransferProviderType {
	if x != nil {
		return x.Type
	}
	return constant.TransferProviderType(0)
}

func (x *VerifyTransferTokenReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Deprecated: Do not use.
func (x *VerifyTransferTokenReply) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *VerifyTransferTokenReply) GetInTermMonthlyTicket() bool {
	if x != nil {
		return x.InTermMonthlyTicket
	}
	return false
}

var File_api_auth_proto protoreflect.FileDescriptor

var file_api_auth_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x17, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2f,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2,
	0x01, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0x8a, 0x97, 0x22,
	0x11, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x28, 0x0a, 0x10,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x13,
	0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x64, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x8a, 0x97, 0x22, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x09, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x8a, 0x97, 0x22, 0x0d, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x4a,
	0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x59, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x43, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x27, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xa4,
	0x02, 0x0a, 0x13, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x43, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x15, 0x8a, 0x97, 0x22, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x55,
	0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x72, 0x0a, 0x14, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x8a, 0x97, 0x22, 0x0d, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x41, 0x6e, 0x64, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x8a, 0x97, 0x22, 0x0d, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x43, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xb9, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55,
	0x52, 0x4c, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x9a, 0x02, 0x0a,
	0x22, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x8a, 0x97, 0x22, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x43, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x55, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3d, 0x0a, 0x23, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x97, 0x02, 0x0a, 0x1f, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x8a,
	0x97, 0x22, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x43, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x55, 0x0a, 0x13, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x3a, 0x0a, 0x20, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa5,
	0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x12, 0x2a, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11,
	0x8a, 0x97, 0x22, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x43, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x35, 0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x17, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x41, 0x72, 0x67, 0x73, 0x22, 0x46, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x15,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x72, 0x67, 0x73, 0x22, 0x40, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a,
	0x10, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x1d, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x8a, 0x97, 0x22, 0x0d,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x43, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xd4, 0x02, 0x0a, 0x1e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x8a, 0x97, 0x22, 0x13, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x08,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x18, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x43, 0x0a, 0x0f, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0xa3,
	0x01, 0x0a, 0x17, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x12, 0x43, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0xbe, 0x02, 0x0a, 0x18, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x8a, 0x97,
	0x22, 0x13, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x02, 0x18, 0x01, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x33, 0x0a, 0x16, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x6c, 0x79, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x69, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x32, 0xff, 0x07, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x05, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41,
	0x72, 0x67, 0x73, 0x1a, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x52, 0x4c, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x55, 0x52, 0x4c, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x55, 0x52, 0x4c, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x1e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x6e, 0x64,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x28,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x1b, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x72, 0x67, 0x73, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x41, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x19, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72,
	0x67, 0x73, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x13, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x1a,
	0x06, 0x8a, 0xa6, 0x1d, 0x02, 0x08, 0x01, 0x42, 0x4f, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x61, 0x6d, 0x63, 0x6f, 0x42, 0x61, 0x6e, 0x64, 0x61,
	0x69, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2f, 0x70,
	0x62, 0x2f, 0x61, 0x70, 0x69, 0xaa, 0x02, 0x20, 0x50, 0x52, 0x49, 0x53, 0x4d, 0x2e, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x53, 0x74, 0x75, 0x62, 0x2e, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_auth_proto_rawDescOnce sync.Once
	file_api_auth_proto_rawDescData = file_api_auth_proto_rawDesc
)

func file_api_auth_proto_rawDescGZIP() []byte {
	file_api_auth_proto_rawDescOnce.Do(func() {
		file_api_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_auth_proto_rawDescData)
	})
	return file_api_auth_proto_rawDescData
}

var file_api_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_api_auth_proto_goTypes = []interface{}{
	(*RegisterArgs)(nil),                        // 0: api.RegisterArgs
	(*RegisterReply)(nil),                       // 1: api.RegisterReply
	(*LoginArgs)(nil),                           // 2: api.LoginArgs
	(*LoginReply)(nil),                          // 3: api.LoginReply
	(*GetTransferURLArgs)(nil),                  // 4: api.GetTransferURLArgs
	(*GetTransferURLReply)(nil),                 // 5: api.GetTransferURLReply
	(*ExecuteTransferArgs)(nil),                 // 6: api.ExecuteTransferArgs
	(*ExecuteTransferReply)(nil),                // 7: api.ExecuteTransferReply
	(*GetConnectURLAndTokenArgs)(nil),           // 8: api.GetConnectURLAndTokenArgs
	(*GetConnectURLAndTokenReply)(nil),          // 9: api.GetConnectURLAndTokenReply
	(*ExecuteConnectProviderAndTokenArgs)(nil),  // 10: api.ExecuteConnectProviderAndTokenArgs
	(*ExecuteConnectProviderAndTokenReply)(nil), // 11: api.ExecuteConnectProviderAndTokenReply
	(*ConnectReleaseOtherAndTokenArgs)(nil),     // 12: api.ConnectReleaseOtherAndTokenArgs
	(*ConnectReleaseOtherAndTokenReply)(nil),    // 13: api.ConnectReleaseOtherAndTokenReply
	(*ConnectReleaseAndTokenArgs)(nil),          // 14: api.ConnectReleaseAndTokenArgs
	(*ConnectReleaseAndTokenReply)(nil),         // 15: api.ConnectReleaseAndTokenReply
	(*GetTransferEnableArgs)(nil),               // 16: api.GetTransferEnableArgs
	(*GetTransferEnableReply)(nil),              // 17: api.GetTransferEnableReply
	(*GetServerEnableArgs)(nil),                 // 18: api.GetServerEnableArgs
	(*GetServerEnableReply)(nil),                // 19: api.GetServerEnableReply
	(*VerifyConnectTokenAndUserArgs)(nil),       // 20: api.VerifyConnectTokenAndUserArgs
	(*VerifyConnectTokenAndUserReply)(nil),      // 21: api.VerifyConnectTokenAndUserReply
	(*VerifyTransferTokenArgs)(nil),             // 22: api.VerifyTransferTokenArgs
	(*VerifyTransferTokenReply)(nil),            // 23: api.VerifyTransferTokenReply
	(*status.SelfStatus)(nil),                   // 24: status.SelfStatus
	(constant.TransferProviderType)(0),          // 25: constant.TransferProviderType
	(constant.TransferAuthenticationType)(0),    // 26: constant.TransferAuthenticationType
	(*timestamppb.Timestamp)(nil),               // 27: google.protobuf.Timestamp
	(constant.ConnectionResultType)(0),          // 28: constant.ConnectionResultType
}
var file_api_auth_proto_depIdxs = []int32{
	24, // 0: api.LoginReply.user:type_name -> status.SelfStatus
	25, // 1: api.GetTransferURLArgs.provider_type:type_name -> constant.TransferProviderType
	25, // 2: api.ExecuteTransferArgs.provider_type:type_name -> constant.TransferProviderType
	26, // 3: api.ExecuteTransferArgs.authentication_type:type_name -> constant.TransferAuthenticationType
	25, // 4: api.GetConnectURLAndTokenArgs.provider_type:type_name -> constant.TransferProviderType
	24, // 5: api.GetConnectURLAndTokenReply.user:type_name -> status.SelfStatus
	27, // 6: api.GetConnectURLAndTokenReply.releasable_date:type_name -> google.protobuf.Timestamp
	25, // 7: api.ExecuteConnectProviderAndTokenArgs.provider_type:type_name -> constant.TransferProviderType
	26, // 8: api.ExecuteConnectProviderAndTokenArgs.authentication_type:type_name -> constant.TransferAuthenticationType
	25, // 9: api.ConnectReleaseOtherAndTokenArgs.provider_type:type_name -> constant.TransferProviderType
	26, // 10: api.ConnectReleaseOtherAndTokenArgs.authentication_type:type_name -> constant.TransferAuthenticationType
	25, // 11: api.ConnectReleaseAndTokenArgs.provider_type:type_name -> constant.TransferProviderType
	25, // 12: api.VerifyConnectTokenAndUserArgs.provider_type:type_name -> constant.TransferProviderType
	28, // 13: api.VerifyConnectTokenAndUserReply.result:type_name -> constant.ConnectionResultType
	25, // 14: api.VerifyConnectTokenAndUserReply.type:type_name -> constant.TransferProviderType
	27, // 15: api.VerifyConnectTokenAndUserReply.releasable_date:type_name -> google.protobuf.Timestamp
	25, // 16: api.VerifyTransferTokenArgs.provider_type:type_name -> constant.TransferProviderType
	28, // 17: api.VerifyTransferTokenReply.result:type_name -> constant.ConnectionResultType
	25, // 18: api.VerifyTransferTokenReply.type:type_name -> constant.TransferProviderType
	0,  // 19: api.AuthService.Register:input_type -> api.RegisterArgs
	2,  // 20: api.AuthService.Login:input_type -> api.LoginArgs
	4,  // 21: api.AuthService.GetTransferURL:input_type -> api.GetTransferURLArgs
	6,  // 22: api.AuthService.ExecuteTransfer:input_type -> api.ExecuteTransferArgs
	8,  // 23: api.AuthService.GetConnectURLAndToken:input_type -> api.GetConnectURLAndTokenArgs
	10, // 24: api.AuthService.ExecuteConnectProviderAndToken:input_type -> api.ExecuteConnectProviderAndTokenArgs
	12, // 25: api.AuthService.ConnectReleaseOtherAndToken:input_type -> api.ConnectReleaseOtherAndTokenArgs
	14, // 26: api.AuthService.ConnectReleaseAndToken:input_type -> api.ConnectReleaseAndTokenArgs
	16, // 27: api.AuthService.GetTransferEnable:input_type -> api.GetTransferEnableArgs
	18, // 28: api.AuthService.GetServerEnable:input_type -> api.GetServerEnableArgs
	20, // 29: api.AuthService.VerifyConnectTokenAndUser:input_type -> api.VerifyConnectTokenAndUserArgs
	22, // 30: api.AuthService.VerifyTransferToken:input_type -> api.VerifyTransferTokenArgs
	1,  // 31: api.AuthService.Register:output_type -> api.RegisterReply
	3,  // 32: api.AuthService.Login:output_type -> api.LoginReply
	5,  // 33: api.AuthService.GetTransferURL:output_type -> api.GetTransferURLReply
	7,  // 34: api.AuthService.ExecuteTransfer:output_type -> api.ExecuteTransferReply
	9,  // 35: api.AuthService.GetConnectURLAndToken:output_type -> api.GetConnectURLAndTokenReply
	11, // 36: api.AuthService.ExecuteConnectProviderAndToken:output_type -> api.ExecuteConnectProviderAndTokenReply
	13, // 37: api.AuthService.ConnectReleaseOtherAndToken:output_type -> api.ConnectReleaseOtherAndTokenReply
	15, // 38: api.AuthService.ConnectReleaseAndToken:output_type -> api.ConnectReleaseAndTokenReply
	17, // 39: api.AuthService.GetTransferEnable:output_type -> api.GetTransferEnableReply
	19, // 40: api.AuthService.GetServerEnable:output_type -> api.GetServerEnableReply
	21, // 41: api.AuthService.VerifyConnectTokenAndUser:output_type -> api.VerifyConnectTokenAndUserReply
	23, // 42: api.AuthService.VerifyTransferToken:output_type -> api.VerifyTransferTokenReply
	31, // [31:43] is the sub-list for method output_type
	19, // [19:31] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_api_auth_proto_init() }
func file_api_auth_proto_init() {
	if File_api_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransferURLArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransferURLReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteTransferArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteTransferReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectURLAndTokenArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectURLAndTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteConnectProviderAndTokenArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteConnectProviderAndTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectReleaseOtherAndTokenArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectReleaseOtherAndTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectReleaseAndTokenArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectReleaseAndTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransferEnableArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransferEnableReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerEnableArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerEnableReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyConnectTokenAndUserArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyConnectTokenAndUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyTransferTokenArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_auth_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyTransferTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_auth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_auth_proto_goTypes,
		DependencyIndexes: file_api_auth_proto_depIdxs,
		MessageInfos:      file_api_auth_proto_msgTypes,
	}.Build()
	File_api_auth_proto = out.File
	file_api_auth_proto_rawDesc = nil
	file_api_auth_proto_goTypes = nil
	file_api_auth_proto_depIdxs = nil
}
